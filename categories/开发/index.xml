<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>开发 on 一念博客</title><link>https://blog.saintic.com/categories/%E5%BC%80%E5%8F%91.html</link><description>Recent content in 开发 on 一念博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 04 Mar 2021 13:04:00 +0800</lastBuildDate><atom:link href="https://blog.saintic.com/categories/%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml"/><item><title>redigo 常用方法封装示例</title><link>https://blog.saintic.com/blog/306.html</link><pubDate>Thu, 04 Mar 2021 13:04:00 +0800</pubDate><guid>https://blog.saintic.com/blog/306.html</guid><description>Redigo是Redis数据库的Go客户端，功能丰富，但是用起来还是不如redis-py顺畅。 GitHub: https://github.com/gomodule/redigo 以下是参照redis-py的风格封装部分命</description></item><item><title>golang内嵌数据库 NutsDB 常用方法封装示例</title><link>https://blog.saintic.com/blog/305.html</link><pubDate>Wed, 24 Feb 2021 13:49:48 +0800</pubDate><guid>https://blog.saintic.com/blog/305.html</guid><description>NutsDB是纯Go语言编写一个简单、高性能、内嵌型、持久化的key-value数据库。 NutsDB支持事务，从v0.2.0之后的版本开始支</description></item><item><title>10进制、64进制互相转换</title><link>https://blog.saintic.com/blog/304.html</link><pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/304.html</guid><description>10 进制转为 62 进制网上有不少文章的，64 进制也就是多了 - _ 这种 10 进制转到高进制，常用在短网址缩短服务中，以下片段是之前 shorturl 跳转程序的部分 编码方法</description></item><item><title>K站随机二次元动漫壁纸接口</title><link>https://blog.saintic.com/blog/303.html</link><pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/303.html</guid><description>konachan（k站）是一个可以搜索动漫壁纸的网站，二次元超清图片下载站，包含动漫同人图和游戏内图， 站点是https://konachan</description></item><item><title>分享下golang开发picbed-cli（sapic）中的技巧</title><link>https://blog.saintic.com/blog/302.html</link><pubDate>Fri, 04 Dec 2020 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/302.html</guid><description>最近在学习go语言，把之前picbed的命令行cli.py用go重写，在编写过程中，go实现相应功能走了些 弯路，在本文拎出来分享给大家（新手</description></item><item><title>Vuepress使用utterances评论系统</title><link>https://blog.saintic.com/blog/301.html</link><pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/301.html</guid><description>前言 我用过的评论系统先后有：多说-畅言-gitment-valine-isso-utterances 前两者，多说关闭后转到畅言，但后来广告、</description></item><item><title>Node.js基于websocket封装Aria2 RPC接口</title><link>https://blog.saintic.com/blog/300.html</link><pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/300.html</guid><description>这里仅简单说一下 aria2 是什么：一款下载工具，一款很NB的下载工具，它可以作为命令式使用，也能开启rpc保持后台启动并通过http或websock</description></item><item><title>封装Semantic-UI Button作为Vue组件</title><link>https://blog.saintic.com/blog/286.html</link><pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/286.html</guid><description>最近在研究Vue.js，加上突然看到了Semantic-UI框架样式非常喜欢，而且各功能有独立模块，作为练习，借此封装了一个Vue组件，基于</description></item><item><title>分享开发rtfd中的部分技巧</title><link>https://blog.saintic.com/blog/274.html</link><pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/274.html</guid><description>下面的代码可以在rtfd中找到源码，不过下方代码稍有更改。 1. 封装configparser模块 说明：解析ini格式的配置文件，对configp</description></item><item><title>PHP7的使用记录</title><link>https://blog.saintic.com/blog/272.html</link><pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/272.html</guid><description>PHP7 2015年正式发版php7.0，随后每年都有发布新版，截止本文时，php7.4已经出了，不过官网上稳定版还是7.3。 PHP7是趋势，不过我</description></item><item><title>关于github+vscode+sphinx+readthedocs写文档的记录</title><link>https://blog.saintic.com/blog/271.html</link><pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/271.html</guid><description>&amp;nbsp; &amp;nbsp; 本文是关于自己写文档（不局限于接口文档）时的一些记录，一条流程，即：文档源码托管在github-&amp;gt;文档编写用vscode编辑器-&amp;</description></item><item><title>Python-SecureHTTP - 基于RSA+AES的加密通信的代码实现</title><link>https://blog.saintic.com/blog/266.html</link><pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/266.html</guid><description>说在前面： 在HTTP协议中，传输数据是明文，被第三方截获后很容易看出数据，所以现在主流建议是HTTPS加密传输，如Chrome，新版本用HT</description></item><item><title>使用sphinx制作接口文档并托管到readthedocs</title><link>https://blog.saintic.com/blog/263.html</link><pubDate>Thu, 08 Nov 2018 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/263.html</guid><description>此sphinx可不是彼sphinx，此篇是指生成文档的工具，是python下最流行的文档生成工具，python官方文档即是它生成，官方网站是</description></item><item><title>python打包分发工具setuptools使用记录</title><link>https://blog.saintic.com/blog/262.html</link><pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/262.html</guid><description>关于python setup.py文件的编写技巧 环境：最新版setuptools，初步认识setuptools可以参考这篇文章 1. 自定义命令 from setuptools</description></item><item><title>python使用zip压缩目录及相关问题</title><link>https://blog.saintic.com/blog/258.html</link><pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/258.html</guid><description>一、Python封装的使用zip压缩文件的代码(修正版)： 说明：这个函数只是针对性地压缩一个目录下所有文件，若使用，你可能需要再修改。 作用：</description></item><item><title>Js抓取花瓣、堆糖图片</title><link>https://blog.saintic.com/blog/256.html</link><pubDate>Fri, 25 May 2018 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/256.html</guid><description>序：花瓣版本：v1.2.1 堆糖版本：v1.1.0 名称：花瓣网下载，堆糖网下载 - 油猴脚本 描述：Js批量下载花瓣网及堆糖网图片 功能：脚本说明文档</description></item><item><title>必应、百度收录查询接口</title><link>https://blog.saintic.com/blog/253.html</link><pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/253.html</guid><description>本站提供的百度、必应是否收录了URL的查询接口，详情访问：https://open.saintic.com/openapi#必应收录查询ht</description></item><item><title>js获取base64图片大小</title><link>https://blog.saintic.com/blog/252.html</link><pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/252.html</guid><description>canvas等裁剪后的图片，base64地址形式，前端获取其大小的函数： function showSize(base64url) { //获取base64图片大小，返回KB数字 var str = base64url.replace(&amp;#39;data:image/png;base64,&amp;#39;, &amp;#39;&amp;#39;); var equalIndex = str.indexOf(&amp;#39;=&amp;#39;); if</description></item><item><title>开机自动下载必应今日图片并更换桌面壁纸</title><link>https://blog.saintic.com/blog/249.html</link><pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/249.html</guid><description>零、简介 当你看腻了Windows桌面背景，觉得不够个性化，或者每次手动设置壁纸略感繁琐，或者找不到称心如意的背景图，那么你可以尝试使用这个小</description></item><item><title>torndb 常用操作和两种事务方式</title><link>https://blog.saintic.com/blog/247.html</link><pubDate>Sat, 13 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/247.html</guid><description>本文转载自：http://hopehook.com/2017/02/19/torndb/ 如有转载，请与原作者联系！ # coding:utf8 import torndb # 建立连接 # 东8区</description></item><item><title>python对带前缀的版本号进行排序</title><link>https://blog.saintic.com/blog/244.html</link><pubDate>Tue, 26 Dec 2017 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/244.html</guid><description>如果有一个版本号的list： 如 version = ['2.0.1', '1.0.2', '1.0.21', '2,2.9', '1.2.11'] 要求：要对version大小进行排序，获得最大的版本号(2.2.9)。 思路：可以转换成数字型tu</description></item><item><title>分享python基于onetimepass的双因素身份验证(2FA)</title><link>https://blog.saintic.com/blog/242.html</link><pubDate>Mon, 25 Dec 2017 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/242.html</guid><description>基础认识 多因素身份验证（MFA）是一种计算机访问控制方法，在这种方法中，用户只有在成功向验证机制提交了几个单独的证据之后才被授予访问权限，通</description></item><item><title>Api接口签名验证(Flask)</title><link>https://blog.saintic.com/blog/241.html</link><pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/241.html</guid><description>前文 在使用Api场景的系统交互时，​使用API签名，即保证请求的数据正确性和接口安全，又能识别API调用者的身份。 以下以一种常见方式演示： 公</description></item><item><title>开放获取Bing每日背景图片接口</title><link>https://blog.saintic.com/blog/240.html</link><pubDate>Tue, 10 Oct 2017 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/240.html</guid><description>以下描述引用自https://oss.so/article/55 经过访问BING的网址最终发现，bing中文网一直在提供每日更新背景图片壁纸</description></item><item><title>月份(单词简写)转数字</title><link>https://blog.saintic.com/blog/239.html</link><pubDate>Wed, 27 Sep 2017 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/239.html</guid><description>function Monthly2Number() { case &amp;#34;$1&amp;#34; in Jan) echo 1;; Feb) echo 2;; Mar) echo 3;; Apr) echo 4;; May) echo 5;; Jun) echo 6;; Jul) echo 7;; Aug) echo 8;; Sep) echo 9;; Oct) echo 10;; Nev) echo 11;; Dec) echo 12;; *) exit 2;; esac } ·End·</description></item><item><title>python计算crontab下次执行时间与执行次数</title><link>https://blog.saintic.com/blog/238.html</link><pubDate>Fri, 15 Sep 2017 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/238.html</guid><description>使用Python计算Linux Crontab定时任务下次运行时间，直接上代码： #coding:utf8 import croniter, datetime, time def datetime_to_timestamp(timestring, format=&amp;#34;%Y-%m-%d%H:%M:%S&amp;#34;): &amp;#34;&amp;#34;&amp;#34; 将普通时间格式转换为时间戳(10位), 形如 &amp;#39;2016-05-05</description></item><item><title>代码编辑器CodeMirror使用</title><link>https://blog.saintic.com/blog/237.html</link><pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/237.html</guid><description>CodeMirror是一个JavaScript组件，可在浏览器中提供代码编辑器。它具有丰富的编程API，并专注于可扩展性。 官网：http:/</description></item><item><title>Flask预览或下载文件</title><link>https://blog.saintic.com/blog/233.html</link><pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/233.html</guid><description>flask版本0.10.1 经测试，可以下载含有中文文件，预览txt、sh、py等(需自定义)文本文件，其他类型直接下载。 # -*- coding: utf-8 -*- import os.path from flask import</description></item><item><title>基于Flask的Web应用程序插件式结构开发</title><link>https://blog.saintic.com/blog/231.html</link><pubDate>Sun, 25 Jun 2017 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/231.html</guid><description>事实上，很多应用程序基于插件式结构开发，可以很方便了扩展软件的功能，并且这些功能完全可以依托于第三方开发者，只要提供好接口和完备文档，比如w</description></item><item><title>Flask集成头像本地裁剪上传功能</title><link>https://blog.saintic.com/blog/230.html</link><pubDate>Sat, 24 Jun 2017 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/230.html</guid><description>原先本站头像纯粹是上传一个图片不作任何处理便作为个人头像使用，可能有诸多不适应之处，从网上最终找了个Jquery头像预览裁切代码，js本地裁</description></item><item><title>flask-cache使用redis缓存出现的错误</title><link>https://blog.saintic.com/blog/227.html</link><pubDate>Wed, 10 May 2017 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/227.html</guid><description>Flask-Cache是flask一个缓存扩展，可用使用simple、redis、memcache等缓存视图及其他，文档：http://ww</description></item><item><title>python生成指纹格式、MAC地址形式的字符串</title><link>https://blog.saintic.com/blog/219.html</link><pubDate>Tue, 21 Feb 2017 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/219.html</guid><description>先上代码： import random gen_fingerprint = lambda n=16,s=2: &amp;#34;:&amp;#34;.join([ &amp;#34;&amp;#34;.join(random.sample(&amp;#34;0123456789abcdef&amp;#34;,s)) for i in range(0, n) ]) n=16, s=2,默认指纹格式,返回结果类似： 47:6f:09:2f:bd:e7:d3:04:1c:7a:40</description></item><item><title>百度站长平台主动推送(实时)接口Python示例</title><link>https://blog.saintic.com/blog/210.html</link><pubDate>Tue, 13 Dec 2016 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/210.html</guid><description>之前已经写过一篇文章，百度站长平台主动推送(实时)链接接口示例，讲述了用命令行curl的方式主动向百度推送我们的相关网址。 今天Interes</description></item><item><title>使用cookie登录的Flask演示系统</title><link>https://blog.saintic.com/blog/207.html</link><pubDate>Tue, 06 Dec 2016 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/207.html</guid><description>登录注册系统非常简单，在之前的文章中也提到过。 由于HTTP协议是一种无状态协议，而服务器要跟踪用户状态，就只能通过cookie实现。大多数W</description></item><item><title>Python抓取花瓣网画板图片</title><link>https://blog.saintic.com/blog/204.html</link><pubDate>Wed, 30 Nov 2016 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/204.html</guid><description>注意：当前最新版本5.0，请移驾至底部。 JavaScript版抓取花瓣网、堆糖网，油猴脚本，更方便更快捷，有兴趣请移驾至 https://blog.saintic.com/blog/256.html ################################################################ 当前区域版本1.</description></item><item><title>Flask使用点滴之cookie</title><link>https://blog.saintic.com/blog/137.html</link><pubDate>Wed, 23 Nov 2016 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/137.html</guid><description>flask用session那叫一个方便，封装的不能更好，反观cookie，为人诟病，但实际上，它也易用且强大。 官方文档中，关于cookie的</description></item><item><title>Python自定义进程名</title><link>https://blog.saintic.com/blog/132.html</link><pubDate>Wed, 23 Nov 2016 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/132.html</guid><description>一般情况下，我们直接启动python程序后使用ps查看，显示的结果为pyton xxx.py，web类应用使用netstat或ss查看显示为p</description></item><item><title>multiprocessing.dummy多线程模块</title><link>https://blog.saintic.com/blog/105.html</link><pubDate>Tue, 01 Nov 2016 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/105.html</guid><description>multiprocessing.dummy replicates the API of multiprocessing but is no more than a wrapper around the threading module. 以上是python官方文档对multiprocessing.dummy的介绍。 简单地说，multiproc</description></item><item><title>RTBAsia真人概率值查询接口</title><link>https://blog.saintic.com/blog/103.html</link><pubDate>Tue, 01 Nov 2016 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/103.html</guid><description>RTBAsia真人概率值说明： 知识背景：互联网用户分为三个最大的“人群”：男，女，机器人；机器人会模仿人类的形态浏览网页、观赏视频、点击广告</description></item><item><title>Python获取系统信息(CPU、Mem、Disk、Network、User等)</title><link>https://blog.saintic.com/blog/86.html</link><pubDate>Thu, 27 Oct 2016 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/86.html</guid><description>#!/usr/bin/env python #coding:utf8 #get system info from psutil #required:psutil try: import sys,psutil,platform,commands,json,socket,os except ImportError as msg: print &amp;#34;Import Error, because %s&amp;#34; % msg sys.exit(1) class SysInfo(): sys_ip=socket.gethostbyname(socket.gethostname()) try: client_ip=os.environ[&amp;#39;SSH_CONNECTION&amp;#39;].split()[0] except: client_ip=&amp;#39;unknown&amp;#39; sys_version=platform.linux_distribution() sys_fqdn=platform.uname()[1] #hostname,eg:localhost.localdomain sys_kernel=platform.uname()[2] #kernel version sys_arch=platform.uname()[4] #eg:x86_64 amd64 win32 def hostname(self): return json.dumps({&amp;#34;Hostname&amp;#34;: self.sys_fqdn}) def ip(self): return json.dumps({&amp;#34;ServerIP&amp;#34;: self.sys_ip, &amp;#39;SSH_Client_IP&amp;#39;: self.client_ip}) def Kernel(self): return json.dumps({&amp;#34;Kernel&amp;#34;: self.sys_kernel}) def Arch(self): return json.dumps({&amp;#34;Arch&amp;#34;: self.sys_arch}) def Version(self): return json.dumps({&amp;#34;SysVersion&amp;#34;: self.sys_version}) def CPU(self):</description></item><item><title>Update nginx version</title><link>https://blog.saintic.com/blog/89.html</link><pubDate>Thu, 27 Oct 2016 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/89.html</guid><description>#!/bin/bash v=1.8.0 nginx=/usr/local/nginx pid=${nginx}/logs/nginx.pid pidbin=${nginx}/logs/nginx.pid.oldbin exec=`which nginx` [ &amp;#34;$?&amp;#34; = &amp;#34;0&amp;#34; ] || exit 1 $exec -V &amp;amp;&amp;gt; /tmp/nginx_V args=$(awk -F &amp;#34;configure arguments:&amp;#34; &amp;#39;{print $2}&amp;#39; /tmp/nginx_V | grep -v &amp;#34;^$&amp;#34;) echo &amp;#39;If your nginx has third party modules, that is, use the &amp;#34;--add-module&amp;#34; parameter, move the module directory to the same location as the current nginx build!&amp;#39; read -p &amp;#34;Continue yes?(y/n)&amp;#34; NEXT [ &amp;#34;$NEXT&amp;#34; = &amp;#34;n&amp;#34; ] &amp;amp;&amp;amp; exit 1</description></item><item><title>服务存活性探测</title><link>https://blog.saintic.com/blog/93.html</link><pubDate>Thu, 27 Oct 2016 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/93.html</guid><description>一个类似于telnet的python脚本。 #!/usr/bin/python #coding:utf-8 &amp;#39;&amp;#39;&amp;#39; 1.判断服务是否正常 2.判断机器是否存活 &amp;#39;&amp;#39;&amp;#39; import os,socket,subprocess,sys #把程序输出定位到/dev/null,否则会在</description></item><item><title>百度站长平台主动推送(实时)链接接口示例</title><link>https://blog.saintic.com/blog/87.html</link><pubDate>Thu, 27 Oct 2016 00:00:00 +0000</pubDate><guid>https://blog.saintic.com/blog/87.html</guid><description>我们有了自己的网站后，基本上都想办法向搜索引擎推送自己的URL。 1、Google Search Console是谷歌的搜索管理系统，添加自己的站点后goo</description></item></channel></rss>